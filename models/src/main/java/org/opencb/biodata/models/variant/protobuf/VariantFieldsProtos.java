// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VariantFields.proto

package org.opencb.biodata.models.variant.protobuf;

public final class VariantFieldsProtos {
  private VariantFieldsProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VariantFileAttributesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .org.opencb.biodata.formats.variant.protobuf.VariantFileAttributes.KeyValue attrs = 1;
    java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue> 
        getAttrsList();
        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue getAttrs(int index);
    int getAttrsCount();
    java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder> 
        getAttrsOrBuilderList();
        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder getAttrsOrBuilder(
        int index);
  }
  public static final class VariantFileAttributes extends
      com.google.protobuf.GeneratedMessage
      implements VariantFileAttributesOrBuilder {
    // Use VariantFileAttributes.newBuilder() to construct.
    private VariantFileAttributes(Builder builder) {
      super(builder);
    }
    private VariantFileAttributes(boolean noInit) {}
    
    private static final VariantFileAttributes defaultInstance;
    public static VariantFileAttributes getDefaultInstance() {
      return defaultInstance;
    }
    
    public VariantFileAttributes getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_fieldAccessorTable;
    }
    
    public interface KeyValueOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required string key = 1;
      boolean hasKey();
      String getKey();
      
      // required string value = 2;
      boolean hasValue();
      String getValue();
    }
    public static final class KeyValue extends
        com.google.protobuf.GeneratedMessage
        implements KeyValueOrBuilder {
      // Use KeyValue.newBuilder() to construct.
      private KeyValue(Builder builder) {
        super(builder);
      }
      private KeyValue(boolean noInit) {}
      
      private static final KeyValue defaultInstance;
      public static KeyValue getDefaultInstance() {
        return defaultInstance;
      }
      
      public KeyValue getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            key_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            value_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        key_ = "";
        value_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_fieldAccessorTable;
        }
        
        // Construct using org.opencb.biodata.formats.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.getDescriptor();
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue getDefaultInstanceForType() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.getDefaultInstance();
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue build() {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue buildPartial() {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue result = new org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue) {
            return mergeFrom((org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue other) {
          if (other == org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                key_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string key = 1;
        private java.lang.Object key_ = "";
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setKey(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }
        void setKey(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
        }
        
        // required string value = 2;
        private java.lang.Object value_ = "";
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setValue(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          onChanged();
          return this;
        }
        void setValue(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
        }
        
        // @@protoc_insertion_point(builder_scope:org.opencb.biodata.formats.variant.protobuf.VariantFileAttributes.KeyValue)
      }
      
      static {
        defaultInstance = new KeyValue(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.opencb.biodata.formats.variant.protobuf.VariantFileAttributes.KeyValue)
    }
    
    // repeated .org.opencb.biodata.formats.variant.protobuf.VariantFileAttributes.KeyValue attrs = 1;
    public static final int ATTRS_FIELD_NUMBER = 1;
    private java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue> attrs_;
    public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue> getAttrsList() {
      return attrs_;
    }
    public java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder> 
        getAttrsOrBuilderList() {
      return attrs_;
    }
    public int getAttrsCount() {
      return attrs_.size();
    }
    public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue getAttrs(int index) {
      return attrs_.get(index);
    }
    public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder getAttrsOrBuilder(
        int index) {
      return attrs_.get(index);
    }
    
    private void initFields() {
      attrs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getAttrsCount(); i++) {
        if (!getAttrs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < attrs_.size(); i++) {
        output.writeMessage(1, attrs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < attrs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, attrs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_fieldAccessorTable;
      }
      
      // Construct using org.opencb.biodata.formats.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttrsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (attrsBuilder_ == null) {
          attrs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          attrsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.getDescriptor();
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes getDefaultInstanceForType() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.getDefaultInstance();
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes build() {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes buildPartial() {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes result = new org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes(this);
        int from_bitField0_ = bitField0_;
        if (attrsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            attrs_ = java.util.Collections.unmodifiableList(attrs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.attrs_ = attrs_;
        } else {
          result.attrs_ = attrsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes) {
          return mergeFrom((org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes other) {
        if (other == org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.getDefaultInstance()) return this;
        if (attrsBuilder_ == null) {
          if (!other.attrs_.isEmpty()) {
            if (attrs_.isEmpty()) {
              attrs_ = other.attrs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAttrsIsMutable();
              attrs_.addAll(other.attrs_);
            }
            onChanged();
          }
        } else {
          if (!other.attrs_.isEmpty()) {
            if (attrsBuilder_.isEmpty()) {
              attrsBuilder_.dispose();
              attrsBuilder_ = null;
              attrs_ = other.attrs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              attrsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAttrsFieldBuilder() : null;
            } else {
              attrsBuilder_.addAllMessages(other.attrs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getAttrsCount(); i++) {
          if (!getAttrs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
                        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder subBuilder = org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttrs(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .org.opencb.biodata.formats.variant.protobuf.VariantFileAttributes.KeyValue attrs = 1;
      private java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue> attrs_ =
        java.util.Collections.emptyList();
      private void ensureAttrsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          attrs_ = new java.util.ArrayList<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue>(attrs_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder> attrsBuilder_;
      
      public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue> getAttrsList() {
        if (attrsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attrs_);
        } else {
          return attrsBuilder_.getMessageList();
        }
      }
      public int getAttrsCount() {
        if (attrsBuilder_ == null) {
          return attrs_.size();
        } else {
          return attrsBuilder_.getCount();
        }
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue getAttrs(int index) {
        if (attrsBuilder_ == null) {
          return attrs_.get(index);
        } else {
          return attrsBuilder_.getMessage(index);
        }
      }
      public Builder setAttrs(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue value) {
        if (attrsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttrsIsMutable();
          attrs_.set(index, value);
          onChanged();
        } else {
          attrsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAttrs(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder builderForValue) {
        if (attrsBuilder_ == null) {
          ensureAttrsIsMutable();
          attrs_.set(index, builderForValue.build());
          onChanged();
        } else {
          attrsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAttrs(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue value) {
        if (attrsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttrsIsMutable();
          attrs_.add(value);
          onChanged();
        } else {
          attrsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAttrs(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue value) {
        if (attrsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttrsIsMutable();
          attrs_.add(index, value);
          onChanged();
        } else {
          attrsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAttrs(
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder builderForValue) {
        if (attrsBuilder_ == null) {
          ensureAttrsIsMutable();
          attrs_.add(builderForValue.build());
          onChanged();
        } else {
          attrsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAttrs(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder builderForValue) {
        if (attrsBuilder_ == null) {
          ensureAttrsIsMutable();
          attrs_.add(index, builderForValue.build());
          onChanged();
        } else {
          attrsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAttrs(
          java.lang.Iterable<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue> values) {
        if (attrsBuilder_ == null) {
          ensureAttrsIsMutable();
          super.addAll(values, attrs_);
          onChanged();
        } else {
          attrsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAttrs() {
        if (attrsBuilder_ == null) {
          attrs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          attrsBuilder_.clear();
        }
        return this;
      }
      public Builder removeAttrs(int index) {
        if (attrsBuilder_ == null) {
          ensureAttrsIsMutable();
          attrs_.remove(index);
          onChanged();
        } else {
          attrsBuilder_.remove(index);
        }
        return this;
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder getAttrsBuilder(
          int index) {
        return getAttrsFieldBuilder().getBuilder(index);
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder getAttrsOrBuilder(
          int index) {
        if (attrsBuilder_ == null) {
          return attrs_.get(index);  } else {
          return attrsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder> 
           getAttrsOrBuilderList() {
        if (attrsBuilder_ != null) {
          return attrsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attrs_);
        }
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder addAttrsBuilder() {
        return getAttrsFieldBuilder().addBuilder(
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.getDefaultInstance());
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder addAttrsBuilder(
          int index) {
        return getAttrsFieldBuilder().addBuilder(
            index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.getDefaultInstance());
      }
      public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder> 
           getAttrsBuilderList() {
        return getAttrsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder> 
          getAttrsFieldBuilder() {
        if (attrsBuilder_ == null) {
          attrsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValueOrBuilder>(
                  attrs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          attrs_ = null;
        }
        return attrsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.opencb.biodata.formats.variant.protobuf.VariantFileAttributes)
    }
    
    static {
      defaultInstance = new VariantFileAttributes(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.opencb.biodata.formats.variant.protobuf.VariantFileAttributes)
  }
  
  public interface VariantSampleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string sample = 1;
    boolean hasSample();
    String getSample();
  }
  public static final class VariantSample extends
      com.google.protobuf.GeneratedMessage
      implements VariantSampleOrBuilder {
    // Use VariantSample.newBuilder() to construct.
    private VariantSample(Builder builder) {
      super(builder);
    }
    private VariantSample(boolean noInit) {}
    
    private static final VariantSample defaultInstance;
    public static VariantSample getDefaultInstance() {
      return defaultInstance;
    }
    
    public VariantSample getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string sample = 1;
    public static final int SAMPLE_FIELD_NUMBER = 1;
    private java.lang.Object sample_;
    public boolean hasSample() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSample() {
      java.lang.Object ref = sample_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sample_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSampleBytes() {
      java.lang.Object ref = sample_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sample_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      sample_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSample()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSampleBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSampleBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_fieldAccessorTable;
      }
      
      // Construct using org.opencb.biodata.formats.variant.protobuf.VariantFieldsProtos.VariantSample.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        sample_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample.getDescriptor();
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample getDefaultInstanceForType() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample.getDefaultInstance();
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample build() {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample buildPartial() {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample result = new org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sample_ = sample_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample) {
          return mergeFrom((org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample other) {
        if (other == org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample.getDefaultInstance()) return this;
        if (other.hasSample()) {
          setSample(other.getSample());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSample()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              sample_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string sample = 1;
      private java.lang.Object sample_ = "";
      public boolean hasSample() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSample() {
        java.lang.Object ref = sample_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sample_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSample(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sample_ = value;
        onChanged();
        return this;
      }
      public Builder clearSample() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sample_ = getDefaultInstance().getSample();
        onChanged();
        return this;
      }
      void setSample(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        sample_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:org.opencb.biodata.formats.variant.protobuf.VariantSample)
    }
    
    static {
      defaultInstance = new VariantSample(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.opencb.biodata.formats.variant.protobuf.VariantSample)
  }
  
  public interface VariantStatsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 ref_allele_count = 1;
    boolean hasRefAlleleCount();
    int getRefAlleleCount();
    
    // required int32 alt_allele_count = 2;
    boolean hasAltAlleleCount();
    int getAltAlleleCount();
    
    // repeated .org.opencb.biodata.formats.variant.protobuf.VariantStats.Count genotypes_count = 3;
    java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count> 
        getGenotypesCountList();
        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count getGenotypesCount(int index);
    int getGenotypesCountCount();
    java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder> 
        getGenotypesCountOrBuilderList();
        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder getGenotypesCountOrBuilder(
        int index);
    
    // required int32 ref_allele_freq = 4;
    boolean hasRefAlleleFreq();
    int getRefAlleleFreq();
    
    // required int32 alt_allele_freq = 5;
    boolean hasAltAlleleFreq();
    int getAltAlleleFreq();
    
    // repeated .org.opencb.biodata.formats.variant.protobuf.VariantStats.Frequency genotypes_freq = 6;
    java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency> 
        getGenotypesFreqList();
        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency getGenotypesFreq(int index);
    int getGenotypesFreqCount();
    java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder> 
        getGenotypesFreqOrBuilderList();
        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder getGenotypesFreqOrBuilder(
        int index);
    
    // required int32 missing_alleles = 7;
    boolean hasMissingAlleles();
    int getMissingAlleles();
    
    // required int32 missing_genotypes = 8;
    boolean hasMissingGenotypes();
    int getMissingGenotypes();
    
    // required float maf = 9;
    boolean hasMaf();
    float getMaf();
    
    // required float mgf = 10;
    boolean hasMgf();
    float getMgf();
    
    // required int32 passed_filters = 11;
    boolean hasPassedFilters();
    int getPassedFilters();
    
    // required float quality = 12;
    boolean hasQuality();
    float getQuality();
    
    // required int32 num_samples = 13;
    boolean hasNumSamples();
    int getNumSamples();
    
    // required int32 transitions_count = 14;
    boolean hasTransitionsCount();
    int getTransitionsCount();
    
    // required int32 transversions_count = 15;
    boolean hasTransversionsCount();
    int getTransversionsCount();
    
    // optional int32 mendelian_errors = 16;
    boolean hasMendelianErrors();
    int getMendelianErrors();
    
    // optional float cases_percent_dominant = 17;
    boolean hasCasesPercentDominant();
    float getCasesPercentDominant();
    
    // optional float controls_percent_dominant = 18;
    boolean hasControlsPercentDominant();
    float getControlsPercentDominant();
    
    // optional float cases_percent_recessive = 19;
    boolean hasCasesPercentRecessive();
    float getCasesPercentRecessive();
    
    // optional float controls_percent_recessive = 20;
    boolean hasControlsPercentRecessive();
    float getControlsPercentRecessive();
    
    // optional float hardy_weinberg = 21;
    boolean hasHardyWeinberg();
    float getHardyWeinberg();
  }
  public static final class VariantStats extends
      com.google.protobuf.GeneratedMessage
      implements VariantStatsOrBuilder {
    // Use VariantStats.newBuilder() to construct.
    private VariantStats(Builder builder) {
      super(builder);
    }
    private VariantStats(boolean noInit) {}
    
    private static final VariantStats defaultInstance;
    public static VariantStats getDefaultInstance() {
      return defaultInstance;
    }
    
    public VariantStats getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_fieldAccessorTable;
    }
    
    public interface CountOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required string key = 1;
      boolean hasKey();
      String getKey();
      
      // required int32 count = 2;
      boolean hasCount();
      int getCount();
    }
    public static final class Count extends
        com.google.protobuf.GeneratedMessage
        implements CountOrBuilder {
      // Use Count.newBuilder() to construct.
      private Count(Builder builder) {
        super(builder);
      }
      private Count(boolean noInit) {}
      
      private static final Count defaultInstance;
      public static Count getDefaultInstance() {
        return defaultInstance;
      }
      
      public Count getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            key_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required int32 count = 2;
      public static final int COUNT_FIELD_NUMBER = 2;
      private int count_;
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getCount() {
        return count_;
      }
      
      private void initFields() {
        key_ = "";
        count_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCount()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, count_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, count_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_fieldAccessorTable;
        }
        
        // Construct using org.opencb.biodata.formats.variant.protobuf.VariantFieldsProtos.VariantStats.Count.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          count_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.getDescriptor();
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count getDefaultInstanceForType() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.getDefaultInstance();
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count build() {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count buildPartial() {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count result = new org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.count_ = count_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count) {
            return mergeFrom((org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count other) {
          if (other == org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasCount()) {
            setCount(other.getCount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasCount()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                key_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                count_ = input.readInt32();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string key = 1;
        private java.lang.Object key_ = "";
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setKey(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }
        void setKey(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
        }
        
        // required int32 count = 2;
        private int count_ ;
        public boolean hasCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public int getCount() {
          return count_;
        }
        public Builder setCount(int value) {
          bitField0_ |= 0x00000002;
          count_ = value;
          onChanged();
          return this;
        }
        public Builder clearCount() {
          bitField0_ = (bitField0_ & ~0x00000002);
          count_ = 0;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.opencb.biodata.formats.variant.protobuf.VariantStats.Count)
      }
      
      static {
        defaultInstance = new Count(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.opencb.biodata.formats.variant.protobuf.VariantStats.Count)
    }
    
    public interface FrequencyOrBuilder
        extends com.google.protobuf.MessageOrBuilder {
      
      // required string key = 1;
      boolean hasKey();
      String getKey();
      
      // required float frequency = 2;
      boolean hasFrequency();
      float getFrequency();
    }
    public static final class Frequency extends
        com.google.protobuf.GeneratedMessage
        implements FrequencyOrBuilder {
      // Use Frequency.newBuilder() to construct.
      private Frequency(Builder builder) {
        super(builder);
      }
      private Frequency(boolean noInit) {}
      
      private static final Frequency defaultInstance;
      public static Frequency getDefaultInstance() {
        return defaultInstance;
      }
      
      public Frequency getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_fieldAccessorTable;
      }
      
      private int bitField0_;
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            key_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required float frequency = 2;
      public static final int FREQUENCY_FIELD_NUMBER = 2;
      private float frequency_;
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getFrequency() {
        return frequency_;
      }
      
      private void initFields() {
        key_ = "";
        frequency_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasFrequency()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, frequency_);
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, frequency_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_descriptor;
        }
        
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_fieldAccessorTable;
        }
        
        // Construct using org.opencb.biodata.formats.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private Builder(BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          frequency_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.getDescriptor();
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency getDefaultInstanceForType() {
          return    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.getDefaultInstance();
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency build() {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency buildPartial() {
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency result = new org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.frequency_ = frequency_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency) {
            return mergeFrom((org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency other) {
          if (other == org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasFrequency()) {
            setFrequency(other.getFrequency());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasFrequency()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  onChanged();
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                key_ = input.readBytes();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                frequency_ = input.readFloat();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string key = 1;
        private java.lang.Object key_ = "";
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setKey(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }
        void setKey(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
        }
        
        // required float frequency = 2;
        private float frequency_ ;
        public boolean hasFrequency() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public float getFrequency() {
          return frequency_;
        }
        public Builder setFrequency(float value) {
          bitField0_ |= 0x00000002;
          frequency_ = value;
          onChanged();
          return this;
        }
        public Builder clearFrequency() {
          bitField0_ = (bitField0_ & ~0x00000002);
          frequency_ = 0F;
          onChanged();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:org.opencb.biodata.formats.variant.protobuf.VariantStats.Frequency)
      }
      
      static {
        defaultInstance = new Frequency(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:org.opencb.biodata.formats.variant.protobuf.VariantStats.Frequency)
    }
    
    private int bitField0_;
    // required int32 ref_allele_count = 1;
    public static final int REF_ALLELE_COUNT_FIELD_NUMBER = 1;
    private int refAlleleCount_;
    public boolean hasRefAlleleCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getRefAlleleCount() {
      return refAlleleCount_;
    }
    
    // required int32 alt_allele_count = 2;
    public static final int ALT_ALLELE_COUNT_FIELD_NUMBER = 2;
    private int altAlleleCount_;
    public boolean hasAltAlleleCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getAltAlleleCount() {
      return altAlleleCount_;
    }
    
    // repeated .org.opencb.biodata.formats.variant.protobuf.VariantStats.Count genotypes_count = 3;
    public static final int GENOTYPES_COUNT_FIELD_NUMBER = 3;
    private java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count> genotypesCount_;
    public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count> getGenotypesCountList() {
      return genotypesCount_;
    }
    public java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder> 
        getGenotypesCountOrBuilderList() {
      return genotypesCount_;
    }
    public int getGenotypesCountCount() {
      return genotypesCount_.size();
    }
    public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count getGenotypesCount(int index) {
      return genotypesCount_.get(index);
    }
    public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder getGenotypesCountOrBuilder(
        int index) {
      return genotypesCount_.get(index);
    }
    
    // required int32 ref_allele_freq = 4;
    public static final int REF_ALLELE_FREQ_FIELD_NUMBER = 4;
    private int refAlleleFreq_;
    public boolean hasRefAlleleFreq() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRefAlleleFreq() {
      return refAlleleFreq_;
    }
    
    // required int32 alt_allele_freq = 5;
    public static final int ALT_ALLELE_FREQ_FIELD_NUMBER = 5;
    private int altAlleleFreq_;
    public boolean hasAltAlleleFreq() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getAltAlleleFreq() {
      return altAlleleFreq_;
    }
    
    // repeated .org.opencb.biodata.formats.variant.protobuf.VariantStats.Frequency genotypes_freq = 6;
    public static final int GENOTYPES_FREQ_FIELD_NUMBER = 6;
    private java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency> genotypesFreq_;
    public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency> getGenotypesFreqList() {
      return genotypesFreq_;
    }
    public java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder> 
        getGenotypesFreqOrBuilderList() {
      return genotypesFreq_;
    }
    public int getGenotypesFreqCount() {
      return genotypesFreq_.size();
    }
    public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency getGenotypesFreq(int index) {
      return genotypesFreq_.get(index);
    }
    public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder getGenotypesFreqOrBuilder(
        int index) {
      return genotypesFreq_.get(index);
    }
    
    // required int32 missing_alleles = 7;
    public static final int MISSING_ALLELES_FIELD_NUMBER = 7;
    private int missingAlleles_;
    public boolean hasMissingAlleles() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getMissingAlleles() {
      return missingAlleles_;
    }
    
    // required int32 missing_genotypes = 8;
    public static final int MISSING_GENOTYPES_FIELD_NUMBER = 8;
    private int missingGenotypes_;
    public boolean hasMissingGenotypes() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getMissingGenotypes() {
      return missingGenotypes_;
    }
    
    // required float maf = 9;
    public static final int MAF_FIELD_NUMBER = 9;
    private float maf_;
    public boolean hasMaf() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public float getMaf() {
      return maf_;
    }
    
    // required float mgf = 10;
    public static final int MGF_FIELD_NUMBER = 10;
    private float mgf_;
    public boolean hasMgf() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public float getMgf() {
      return mgf_;
    }
    
    // required int32 passed_filters = 11;
    public static final int PASSED_FILTERS_FIELD_NUMBER = 11;
    private int passedFilters_;
    public boolean hasPassedFilters() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getPassedFilters() {
      return passedFilters_;
    }
    
    // required float quality = 12;
    public static final int QUALITY_FIELD_NUMBER = 12;
    private float quality_;
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public float getQuality() {
      return quality_;
    }
    
    // required int32 num_samples = 13;
    public static final int NUM_SAMPLES_FIELD_NUMBER = 13;
    private int numSamples_;
    public boolean hasNumSamples() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getNumSamples() {
      return numSamples_;
    }
    
    // required int32 transitions_count = 14;
    public static final int TRANSITIONS_COUNT_FIELD_NUMBER = 14;
    private int transitionsCount_;
    public boolean hasTransitionsCount() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getTransitionsCount() {
      return transitionsCount_;
    }
    
    // required int32 transversions_count = 15;
    public static final int TRANSVERSIONS_COUNT_FIELD_NUMBER = 15;
    private int transversionsCount_;
    public boolean hasTransversionsCount() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getTransversionsCount() {
      return transversionsCount_;
    }
    
    // optional int32 mendelian_errors = 16;
    public static final int MENDELIAN_ERRORS_FIELD_NUMBER = 16;
    private int mendelianErrors_;
    public boolean hasMendelianErrors() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getMendelianErrors() {
      return mendelianErrors_;
    }
    
    // optional float cases_percent_dominant = 17;
    public static final int CASES_PERCENT_DOMINANT_FIELD_NUMBER = 17;
    private float casesPercentDominant_;
    public boolean hasCasesPercentDominant() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public float getCasesPercentDominant() {
      return casesPercentDominant_;
    }
    
    // optional float controls_percent_dominant = 18;
    public static final int CONTROLS_PERCENT_DOMINANT_FIELD_NUMBER = 18;
    private float controlsPercentDominant_;
    public boolean hasControlsPercentDominant() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public float getControlsPercentDominant() {
      return controlsPercentDominant_;
    }
    
    // optional float cases_percent_recessive = 19;
    public static final int CASES_PERCENT_RECESSIVE_FIELD_NUMBER = 19;
    private float casesPercentRecessive_;
    public boolean hasCasesPercentRecessive() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public float getCasesPercentRecessive() {
      return casesPercentRecessive_;
    }
    
    // optional float controls_percent_recessive = 20;
    public static final int CONTROLS_PERCENT_RECESSIVE_FIELD_NUMBER = 20;
    private float controlsPercentRecessive_;
    public boolean hasControlsPercentRecessive() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public float getControlsPercentRecessive() {
      return controlsPercentRecessive_;
    }
    
    // optional float hardy_weinberg = 21;
    public static final int HARDY_WEINBERG_FIELD_NUMBER = 21;
    private float hardyWeinberg_;
    public boolean hasHardyWeinberg() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public float getHardyWeinberg() {
      return hardyWeinberg_;
    }
    
    private void initFields() {
      refAlleleCount_ = 0;
      altAlleleCount_ = 0;
      genotypesCount_ = java.util.Collections.emptyList();
      refAlleleFreq_ = 0;
      altAlleleFreq_ = 0;
      genotypesFreq_ = java.util.Collections.emptyList();
      missingAlleles_ = 0;
      missingGenotypes_ = 0;
      maf_ = 0F;
      mgf_ = 0F;
      passedFilters_ = 0;
      quality_ = 0F;
      numSamples_ = 0;
      transitionsCount_ = 0;
      transversionsCount_ = 0;
      mendelianErrors_ = 0;
      casesPercentDominant_ = 0F;
      controlsPercentDominant_ = 0F;
      casesPercentRecessive_ = 0F;
      controlsPercentRecessive_ = 0F;
      hardyWeinberg_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRefAlleleCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAltAlleleCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRefAlleleFreq()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAltAlleleFreq()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMissingAlleles()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMissingGenotypes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaf()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMgf()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPassedFilters()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuality()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumSamples()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTransitionsCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTransversionsCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGenotypesCountCount(); i++) {
        if (!getGenotypesCount(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getGenotypesFreqCount(); i++) {
        if (!getGenotypesFreq(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, refAlleleCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, altAlleleCount_);
      }
      for (int i = 0; i < genotypesCount_.size(); i++) {
        output.writeMessage(3, genotypesCount_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, refAlleleFreq_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, altAlleleFreq_);
      }
      for (int i = 0; i < genotypesFreq_.size(); i++) {
        output.writeMessage(6, genotypesFreq_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, missingAlleles_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, missingGenotypes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(9, maf_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(10, mgf_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, passedFilters_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(12, quality_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, numSamples_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(14, transitionsCount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(15, transversionsCount_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(16, mendelianErrors_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(17, casesPercentDominant_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(18, controlsPercentDominant_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeFloat(19, casesPercentRecessive_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeFloat(20, controlsPercentRecessive_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeFloat(21, hardyWeinberg_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, refAlleleCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, altAlleleCount_);
      }
      for (int i = 0; i < genotypesCount_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, genotypesCount_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, refAlleleFreq_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, altAlleleFreq_);
      }
      for (int i = 0; i < genotypesFreq_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, genotypesFreq_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, missingAlleles_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, missingGenotypes_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, maf_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, mgf_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, passedFilters_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, quality_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, numSamples_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, transitionsCount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, transversionsCount_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, mendelianErrors_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, casesPercentDominant_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, controlsPercentDominant_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, casesPercentRecessive_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, controlsPercentRecessive_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, hardyWeinberg_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_fieldAccessorTable;
      }
      
      // Construct using org.opencb.biodata.formats.variant.protobuf.VariantFieldsProtos.VariantStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGenotypesCountFieldBuilder();
          getGenotypesFreqFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        refAlleleCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        altAlleleCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (genotypesCountBuilder_ == null) {
          genotypesCount_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          genotypesCountBuilder_.clear();
        }
        refAlleleFreq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        altAlleleFreq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (genotypesFreqBuilder_ == null) {
          genotypesFreq_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          genotypesFreqBuilder_.clear();
        }
        missingAlleles_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        missingGenotypes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        maf_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        mgf_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        passedFilters_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        quality_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        numSamples_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        transitionsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        transversionsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        mendelianErrors_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        casesPercentDominant_ = 0F;
        bitField0_ = (bitField0_ & ~0x00010000);
        controlsPercentDominant_ = 0F;
        bitField0_ = (bitField0_ & ~0x00020000);
        casesPercentRecessive_ = 0F;
        bitField0_ = (bitField0_ & ~0x00040000);
        controlsPercentRecessive_ = 0F;
        bitField0_ = (bitField0_ & ~0x00080000);
        hardyWeinberg_ = 0F;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.getDescriptor();
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats getDefaultInstanceForType() {
        return  org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.getDefaultInstance();
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats build() {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats buildPartial() {
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats result = new org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.refAlleleCount_ = refAlleleCount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.altAlleleCount_ = altAlleleCount_;
        if (genotypesCountBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            genotypesCount_ = java.util.Collections.unmodifiableList(genotypesCount_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.genotypesCount_ = genotypesCount_;
        } else {
          result.genotypesCount_ = genotypesCountBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.refAlleleFreq_ = refAlleleFreq_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.altAlleleFreq_ = altAlleleFreq_;
        if (genotypesFreqBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            genotypesFreq_ = java.util.Collections.unmodifiableList(genotypesFreq_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.genotypesFreq_ = genotypesFreq_;
        } else {
          result.genotypesFreq_ = genotypesFreqBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.missingAlleles_ = missingAlleles_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.missingGenotypes_ = missingGenotypes_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maf_ = maf_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.mgf_ = mgf_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.passedFilters_ = passedFilters_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.numSamples_ = numSamples_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.transitionsCount_ = transitionsCount_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.transversionsCount_ = transversionsCount_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.mendelianErrors_ = mendelianErrors_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.casesPercentDominant_ = casesPercentDominant_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.controlsPercentDominant_ = controlsPercentDominant_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.casesPercentRecessive_ = casesPercentRecessive_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.controlsPercentRecessive_ = controlsPercentRecessive_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.hardyWeinberg_ = hardyWeinberg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats) {
          return mergeFrom((org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats other) {
        if (other == org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.getDefaultInstance()) return this;
        if (other.hasRefAlleleCount()) {
          setRefAlleleCount(other.getRefAlleleCount());
        }
        if (other.hasAltAlleleCount()) {
          setAltAlleleCount(other.getAltAlleleCount());
        }
        if (genotypesCountBuilder_ == null) {
          if (!other.genotypesCount_.isEmpty()) {
            if (genotypesCount_.isEmpty()) {
              genotypesCount_ = other.genotypesCount_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureGenotypesCountIsMutable();
              genotypesCount_.addAll(other.genotypesCount_);
            }
            onChanged();
          }
        } else {
          if (!other.genotypesCount_.isEmpty()) {
            if (genotypesCountBuilder_.isEmpty()) {
              genotypesCountBuilder_.dispose();
              genotypesCountBuilder_ = null;
              genotypesCount_ = other.genotypesCount_;
              bitField0_ = (bitField0_ & ~0x00000004);
              genotypesCountBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGenotypesCountFieldBuilder() : null;
            } else {
              genotypesCountBuilder_.addAllMessages(other.genotypesCount_);
            }
          }
        }
        if (other.hasRefAlleleFreq()) {
          setRefAlleleFreq(other.getRefAlleleFreq());
        }
        if (other.hasAltAlleleFreq()) {
          setAltAlleleFreq(other.getAltAlleleFreq());
        }
        if (genotypesFreqBuilder_ == null) {
          if (!other.genotypesFreq_.isEmpty()) {
            if (genotypesFreq_.isEmpty()) {
              genotypesFreq_ = other.genotypesFreq_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureGenotypesFreqIsMutable();
              genotypesFreq_.addAll(other.genotypesFreq_);
            }
            onChanged();
          }
        } else {
          if (!other.genotypesFreq_.isEmpty()) {
            if (genotypesFreqBuilder_.isEmpty()) {
              genotypesFreqBuilder_.dispose();
              genotypesFreqBuilder_ = null;
              genotypesFreq_ = other.genotypesFreq_;
              bitField0_ = (bitField0_ & ~0x00000020);
              genotypesFreqBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGenotypesFreqFieldBuilder() : null;
            } else {
              genotypesFreqBuilder_.addAllMessages(other.genotypesFreq_);
            }
          }
        }
        if (other.hasMissingAlleles()) {
          setMissingAlleles(other.getMissingAlleles());
        }
        if (other.hasMissingGenotypes()) {
          setMissingGenotypes(other.getMissingGenotypes());
        }
        if (other.hasMaf()) {
          setMaf(other.getMaf());
        }
        if (other.hasMgf()) {
          setMgf(other.getMgf());
        }
        if (other.hasPassedFilters()) {
          setPassedFilters(other.getPassedFilters());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasNumSamples()) {
          setNumSamples(other.getNumSamples());
        }
        if (other.hasTransitionsCount()) {
          setTransitionsCount(other.getTransitionsCount());
        }
        if (other.hasTransversionsCount()) {
          setTransversionsCount(other.getTransversionsCount());
        }
        if (other.hasMendelianErrors()) {
          setMendelianErrors(other.getMendelianErrors());
        }
        if (other.hasCasesPercentDominant()) {
          setCasesPercentDominant(other.getCasesPercentDominant());
        }
        if (other.hasControlsPercentDominant()) {
          setControlsPercentDominant(other.getControlsPercentDominant());
        }
        if (other.hasCasesPercentRecessive()) {
          setCasesPercentRecessive(other.getCasesPercentRecessive());
        }
        if (other.hasControlsPercentRecessive()) {
          setControlsPercentRecessive(other.getControlsPercentRecessive());
        }
        if (other.hasHardyWeinberg()) {
          setHardyWeinberg(other.getHardyWeinberg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRefAlleleCount()) {
          
          return false;
        }
        if (!hasAltAlleleCount()) {
          
          return false;
        }
        if (!hasRefAlleleFreq()) {
          
          return false;
        }
        if (!hasAltAlleleFreq()) {
          
          return false;
        }
        if (!hasMissingAlleles()) {
          
          return false;
        }
        if (!hasMissingGenotypes()) {
          
          return false;
        }
        if (!hasMaf()) {
          
          return false;
        }
        if (!hasMgf()) {
          
          return false;
        }
        if (!hasPassedFilters()) {
          
          return false;
        }
        if (!hasQuality()) {
          
          return false;
        }
        if (!hasNumSamples()) {
          
          return false;
        }
        if (!hasTransitionsCount()) {
          
          return false;
        }
        if (!hasTransversionsCount()) {
          
          return false;
        }
        for (int i = 0; i < getGenotypesCountCount(); i++) {
          if (!getGenotypesCount(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getGenotypesFreqCount(); i++) {
          if (!getGenotypesFreq(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              refAlleleCount_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              altAlleleCount_ = input.readInt32();
              break;
            }
            case 26: {
                        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder subBuilder = org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGenotypesCount(subBuilder.buildPartial());
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              refAlleleFreq_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              altAlleleFreq_ = input.readInt32();
              break;
            }
            case 50: {
                        org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder subBuilder = org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGenotypesFreq(subBuilder.buildPartial());
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              missingAlleles_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              missingGenotypes_ = input.readInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              maf_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              mgf_ = input.readFloat();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              passedFilters_ = input.readInt32();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              quality_ = input.readFloat();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              numSamples_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              transitionsCount_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              transversionsCount_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              mendelianErrors_ = input.readInt32();
              break;
            }
            case 141: {
              bitField0_ |= 0x00010000;
              casesPercentDominant_ = input.readFloat();
              break;
            }
            case 149: {
              bitField0_ |= 0x00020000;
              controlsPercentDominant_ = input.readFloat();
              break;
            }
            case 157: {
              bitField0_ |= 0x00040000;
              casesPercentRecessive_ = input.readFloat();
              break;
            }
            case 165: {
              bitField0_ |= 0x00080000;
              controlsPercentRecessive_ = input.readFloat();
              break;
            }
            case 173: {
              bitField0_ |= 0x00100000;
              hardyWeinberg_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 ref_allele_count = 1;
      private int refAlleleCount_ ;
      public boolean hasRefAlleleCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getRefAlleleCount() {
        return refAlleleCount_;
      }
      public Builder setRefAlleleCount(int value) {
        bitField0_ |= 0x00000001;
        refAlleleCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearRefAlleleCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        refAlleleCount_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 alt_allele_count = 2;
      private int altAlleleCount_ ;
      public boolean hasAltAlleleCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getAltAlleleCount() {
        return altAlleleCount_;
      }
      public Builder setAltAlleleCount(int value) {
        bitField0_ |= 0x00000002;
        altAlleleCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearAltAlleleCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        altAlleleCount_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .org.opencb.biodata.formats.variant.protobuf.VariantStats.Count genotypes_count = 3;
      private java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count> genotypesCount_ =
        java.util.Collections.emptyList();
      private void ensureGenotypesCountIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          genotypesCount_ = new java.util.ArrayList<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count>(genotypesCount_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder> genotypesCountBuilder_;
      
      public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count> getGenotypesCountList() {
        if (genotypesCountBuilder_ == null) {
          return java.util.Collections.unmodifiableList(genotypesCount_);
        } else {
          return genotypesCountBuilder_.getMessageList();
        }
      }
      public int getGenotypesCountCount() {
        if (genotypesCountBuilder_ == null) {
          return genotypesCount_.size();
        } else {
          return genotypesCountBuilder_.getCount();
        }
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count getGenotypesCount(int index) {
        if (genotypesCountBuilder_ == null) {
          return genotypesCount_.get(index);
        } else {
          return genotypesCountBuilder_.getMessage(index);
        }
      }
      public Builder setGenotypesCount(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count value) {
        if (genotypesCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypesCountIsMutable();
          genotypesCount_.set(index, value);
          onChanged();
        } else {
          genotypesCountBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setGenotypesCount(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder builderForValue) {
        if (genotypesCountBuilder_ == null) {
          ensureGenotypesCountIsMutable();
          genotypesCount_.set(index, builderForValue.build());
          onChanged();
        } else {
          genotypesCountBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addGenotypesCount(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count value) {
        if (genotypesCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypesCountIsMutable();
          genotypesCount_.add(value);
          onChanged();
        } else {
          genotypesCountBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addGenotypesCount(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count value) {
        if (genotypesCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypesCountIsMutable();
          genotypesCount_.add(index, value);
          onChanged();
        } else {
          genotypesCountBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addGenotypesCount(
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder builderForValue) {
        if (genotypesCountBuilder_ == null) {
          ensureGenotypesCountIsMutable();
          genotypesCount_.add(builderForValue.build());
          onChanged();
        } else {
          genotypesCountBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addGenotypesCount(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder builderForValue) {
        if (genotypesCountBuilder_ == null) {
          ensureGenotypesCountIsMutable();
          genotypesCount_.add(index, builderForValue.build());
          onChanged();
        } else {
          genotypesCountBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllGenotypesCount(
          java.lang.Iterable<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count> values) {
        if (genotypesCountBuilder_ == null) {
          ensureGenotypesCountIsMutable();
          super.addAll(values, genotypesCount_);
          onChanged();
        } else {
          genotypesCountBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearGenotypesCount() {
        if (genotypesCountBuilder_ == null) {
          genotypesCount_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          genotypesCountBuilder_.clear();
        }
        return this;
      }
      public Builder removeGenotypesCount(int index) {
        if (genotypesCountBuilder_ == null) {
          ensureGenotypesCountIsMutable();
          genotypesCount_.remove(index);
          onChanged();
        } else {
          genotypesCountBuilder_.remove(index);
        }
        return this;
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder getGenotypesCountBuilder(
          int index) {
        return getGenotypesCountFieldBuilder().getBuilder(index);
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder getGenotypesCountOrBuilder(
          int index) {
        if (genotypesCountBuilder_ == null) {
          return genotypesCount_.get(index);  } else {
          return genotypesCountBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder> 
           getGenotypesCountOrBuilderList() {
        if (genotypesCountBuilder_ != null) {
          return genotypesCountBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(genotypesCount_);
        }
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder addGenotypesCountBuilder() {
        return getGenotypesCountFieldBuilder().addBuilder(
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.getDefaultInstance());
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder addGenotypesCountBuilder(
          int index) {
        return getGenotypesCountFieldBuilder().addBuilder(
            index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.getDefaultInstance());
      }
      public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder> 
           getGenotypesCountBuilderList() {
        return getGenotypesCountFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder> 
          getGenotypesCountFieldBuilder() {
        if (genotypesCountBuilder_ == null) {
          genotypesCountBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.CountOrBuilder>(
                  genotypesCount_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          genotypesCount_ = null;
        }
        return genotypesCountBuilder_;
      }
      
      // required int32 ref_allele_freq = 4;
      private int refAlleleFreq_ ;
      public boolean hasRefAlleleFreq() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getRefAlleleFreq() {
        return refAlleleFreq_;
      }
      public Builder setRefAlleleFreq(int value) {
        bitField0_ |= 0x00000008;
        refAlleleFreq_ = value;
        onChanged();
        return this;
      }
      public Builder clearRefAlleleFreq() {
        bitField0_ = (bitField0_ & ~0x00000008);
        refAlleleFreq_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 alt_allele_freq = 5;
      private int altAlleleFreq_ ;
      public boolean hasAltAlleleFreq() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getAltAlleleFreq() {
        return altAlleleFreq_;
      }
      public Builder setAltAlleleFreq(int value) {
        bitField0_ |= 0x00000010;
        altAlleleFreq_ = value;
        onChanged();
        return this;
      }
      public Builder clearAltAlleleFreq() {
        bitField0_ = (bitField0_ & ~0x00000010);
        altAlleleFreq_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .org.opencb.biodata.formats.variant.protobuf.VariantStats.Frequency genotypes_freq = 6;
      private java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency> genotypesFreq_ =
        java.util.Collections.emptyList();
      private void ensureGenotypesFreqIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          genotypesFreq_ = new java.util.ArrayList<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency>(genotypesFreq_);
          bitField0_ |= 0x00000020;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder> genotypesFreqBuilder_;
      
      public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency> getGenotypesFreqList() {
        if (genotypesFreqBuilder_ == null) {
          return java.util.Collections.unmodifiableList(genotypesFreq_);
        } else {
          return genotypesFreqBuilder_.getMessageList();
        }
      }
      public int getGenotypesFreqCount() {
        if (genotypesFreqBuilder_ == null) {
          return genotypesFreq_.size();
        } else {
          return genotypesFreqBuilder_.getCount();
        }
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency getGenotypesFreq(int index) {
        if (genotypesFreqBuilder_ == null) {
          return genotypesFreq_.get(index);
        } else {
          return genotypesFreqBuilder_.getMessage(index);
        }
      }
      public Builder setGenotypesFreq(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency value) {
        if (genotypesFreqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypesFreqIsMutable();
          genotypesFreq_.set(index, value);
          onChanged();
        } else {
          genotypesFreqBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setGenotypesFreq(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder builderForValue) {
        if (genotypesFreqBuilder_ == null) {
          ensureGenotypesFreqIsMutable();
          genotypesFreq_.set(index, builderForValue.build());
          onChanged();
        } else {
          genotypesFreqBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addGenotypesFreq(org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency value) {
        if (genotypesFreqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypesFreqIsMutable();
          genotypesFreq_.add(value);
          onChanged();
        } else {
          genotypesFreqBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addGenotypesFreq(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency value) {
        if (genotypesFreqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGenotypesFreqIsMutable();
          genotypesFreq_.add(index, value);
          onChanged();
        } else {
          genotypesFreqBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addGenotypesFreq(
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder builderForValue) {
        if (genotypesFreqBuilder_ == null) {
          ensureGenotypesFreqIsMutable();
          genotypesFreq_.add(builderForValue.build());
          onChanged();
        } else {
          genotypesFreqBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addGenotypesFreq(
          int index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder builderForValue) {
        if (genotypesFreqBuilder_ == null) {
          ensureGenotypesFreqIsMutable();
          genotypesFreq_.add(index, builderForValue.build());
          onChanged();
        } else {
          genotypesFreqBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllGenotypesFreq(
          java.lang.Iterable<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency> values) {
        if (genotypesFreqBuilder_ == null) {
          ensureGenotypesFreqIsMutable();
          super.addAll(values, genotypesFreq_);
          onChanged();
        } else {
          genotypesFreqBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearGenotypesFreq() {
        if (genotypesFreqBuilder_ == null) {
          genotypesFreq_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          genotypesFreqBuilder_.clear();
        }
        return this;
      }
      public Builder removeGenotypesFreq(int index) {
        if (genotypesFreqBuilder_ == null) {
          ensureGenotypesFreqIsMutable();
          genotypesFreq_.remove(index);
          onChanged();
        } else {
          genotypesFreqBuilder_.remove(index);
        }
        return this;
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder getGenotypesFreqBuilder(
          int index) {
        return getGenotypesFreqFieldBuilder().getBuilder(index);
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder getGenotypesFreqOrBuilder(
          int index) {
        if (genotypesFreqBuilder_ == null) {
          return genotypesFreq_.get(index);  } else {
          return genotypesFreqBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder> 
           getGenotypesFreqOrBuilderList() {
        if (genotypesFreqBuilder_ != null) {
          return genotypesFreqBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(genotypesFreq_);
        }
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder addGenotypesFreqBuilder() {
        return getGenotypesFreqFieldBuilder().addBuilder(
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.getDefaultInstance());
      }
      public org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder addGenotypesFreqBuilder(
          int index) {
        return getGenotypesFreqFieldBuilder().addBuilder(
            index, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.getDefaultInstance());
      }
      public java.util.List<org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder> 
           getGenotypesFreqBuilderList() {
        return getGenotypesFreqFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
            org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder> 
          getGenotypesFreqFieldBuilder() {
        if (genotypesFreqBuilder_ == null) {
          genotypesFreqBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                    org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder, org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.FrequencyOrBuilder>(
                  genotypesFreq_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          genotypesFreq_ = null;
        }
        return genotypesFreqBuilder_;
      }
      
      // required int32 missing_alleles = 7;
      private int missingAlleles_ ;
      public boolean hasMissingAlleles() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getMissingAlleles() {
        return missingAlleles_;
      }
      public Builder setMissingAlleles(int value) {
        bitField0_ |= 0x00000040;
        missingAlleles_ = value;
        onChanged();
        return this;
      }
      public Builder clearMissingAlleles() {
        bitField0_ = (bitField0_ & ~0x00000040);
        missingAlleles_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 missing_genotypes = 8;
      private int missingGenotypes_ ;
      public boolean hasMissingGenotypes() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getMissingGenotypes() {
        return missingGenotypes_;
      }
      public Builder setMissingGenotypes(int value) {
        bitField0_ |= 0x00000080;
        missingGenotypes_ = value;
        onChanged();
        return this;
      }
      public Builder clearMissingGenotypes() {
        bitField0_ = (bitField0_ & ~0x00000080);
        missingGenotypes_ = 0;
        onChanged();
        return this;
      }
      
      // required float maf = 9;
      private float maf_ ;
      public boolean hasMaf() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public float getMaf() {
        return maf_;
      }
      public Builder setMaf(float value) {
        bitField0_ |= 0x00000100;
        maf_ = value;
        onChanged();
        return this;
      }
      public Builder clearMaf() {
        bitField0_ = (bitField0_ & ~0x00000100);
        maf_ = 0F;
        onChanged();
        return this;
      }
      
      // required float mgf = 10;
      private float mgf_ ;
      public boolean hasMgf() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public float getMgf() {
        return mgf_;
      }
      public Builder setMgf(float value) {
        bitField0_ |= 0x00000200;
        mgf_ = value;
        onChanged();
        return this;
      }
      public Builder clearMgf() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mgf_ = 0F;
        onChanged();
        return this;
      }
      
      // required int32 passed_filters = 11;
      private int passedFilters_ ;
      public boolean hasPassedFilters() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getPassedFilters() {
        return passedFilters_;
      }
      public Builder setPassedFilters(int value) {
        bitField0_ |= 0x00000400;
        passedFilters_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassedFilters() {
        bitField0_ = (bitField0_ & ~0x00000400);
        passedFilters_ = 0;
        onChanged();
        return this;
      }
      
      // required float quality = 12;
      private float quality_ ;
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public float getQuality() {
        return quality_;
      }
      public Builder setQuality(float value) {
        bitField0_ |= 0x00000800;
        quality_ = value;
        onChanged();
        return this;
      }
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000800);
        quality_ = 0F;
        onChanged();
        return this;
      }
      
      // required int32 num_samples = 13;
      private int numSamples_ ;
      public boolean hasNumSamples() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getNumSamples() {
        return numSamples_;
      }
      public Builder setNumSamples(int value) {
        bitField0_ |= 0x00001000;
        numSamples_ = value;
        onChanged();
        return this;
      }
      public Builder clearNumSamples() {
        bitField0_ = (bitField0_ & ~0x00001000);
        numSamples_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 transitions_count = 14;
      private int transitionsCount_ ;
      public boolean hasTransitionsCount() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getTransitionsCount() {
        return transitionsCount_;
      }
      public Builder setTransitionsCount(int value) {
        bitField0_ |= 0x00002000;
        transitionsCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearTransitionsCount() {
        bitField0_ = (bitField0_ & ~0x00002000);
        transitionsCount_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 transversions_count = 15;
      private int transversionsCount_ ;
      public boolean hasTransversionsCount() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getTransversionsCount() {
        return transversionsCount_;
      }
      public Builder setTransversionsCount(int value) {
        bitField0_ |= 0x00004000;
        transversionsCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearTransversionsCount() {
        bitField0_ = (bitField0_ & ~0x00004000);
        transversionsCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 mendelian_errors = 16;
      private int mendelianErrors_ ;
      public boolean hasMendelianErrors() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getMendelianErrors() {
        return mendelianErrors_;
      }
      public Builder setMendelianErrors(int value) {
        bitField0_ |= 0x00008000;
        mendelianErrors_ = value;
        onChanged();
        return this;
      }
      public Builder clearMendelianErrors() {
        bitField0_ = (bitField0_ & ~0x00008000);
        mendelianErrors_ = 0;
        onChanged();
        return this;
      }
      
      // optional float cases_percent_dominant = 17;
      private float casesPercentDominant_ ;
      public boolean hasCasesPercentDominant() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public float getCasesPercentDominant() {
        return casesPercentDominant_;
      }
      public Builder setCasesPercentDominant(float value) {
        bitField0_ |= 0x00010000;
        casesPercentDominant_ = value;
        onChanged();
        return this;
      }
      public Builder clearCasesPercentDominant() {
        bitField0_ = (bitField0_ & ~0x00010000);
        casesPercentDominant_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float controls_percent_dominant = 18;
      private float controlsPercentDominant_ ;
      public boolean hasControlsPercentDominant() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public float getControlsPercentDominant() {
        return controlsPercentDominant_;
      }
      public Builder setControlsPercentDominant(float value) {
        bitField0_ |= 0x00020000;
        controlsPercentDominant_ = value;
        onChanged();
        return this;
      }
      public Builder clearControlsPercentDominant() {
        bitField0_ = (bitField0_ & ~0x00020000);
        controlsPercentDominant_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float cases_percent_recessive = 19;
      private float casesPercentRecessive_ ;
      public boolean hasCasesPercentRecessive() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public float getCasesPercentRecessive() {
        return casesPercentRecessive_;
      }
      public Builder setCasesPercentRecessive(float value) {
        bitField0_ |= 0x00040000;
        casesPercentRecessive_ = value;
        onChanged();
        return this;
      }
      public Builder clearCasesPercentRecessive() {
        bitField0_ = (bitField0_ & ~0x00040000);
        casesPercentRecessive_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float controls_percent_recessive = 20;
      private float controlsPercentRecessive_ ;
      public boolean hasControlsPercentRecessive() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public float getControlsPercentRecessive() {
        return controlsPercentRecessive_;
      }
      public Builder setControlsPercentRecessive(float value) {
        bitField0_ |= 0x00080000;
        controlsPercentRecessive_ = value;
        onChanged();
        return this;
      }
      public Builder clearControlsPercentRecessive() {
        bitField0_ = (bitField0_ & ~0x00080000);
        controlsPercentRecessive_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float hardy_weinberg = 21;
      private float hardyWeinberg_ ;
      public boolean hasHardyWeinberg() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public float getHardyWeinberg() {
        return hardyWeinberg_;
      }
      public Builder setHardyWeinberg(float value) {
        bitField0_ |= 0x00100000;
        hardyWeinberg_ = value;
        onChanged();
        return this;
      }
      public Builder clearHardyWeinberg() {
        bitField0_ = (bitField0_ & ~0x00100000);
        hardyWeinberg_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.opencb.biodata.formats.variant.protobuf.VariantStats)
    }
    
    static {
      defaultInstance = new VariantStats(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.opencb.biodata.formats.variant.protobuf.VariantStats)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023VariantFields.proto\022+org.opencb.biodat" +
      "a.formats.variant.protobuf\"\233\001\n\025VariantFi" +
      "leAttributes\022Z\n\005attrs\030\001 \003(\0132K.org.opencb" +
      ".biodata.formats.variant.protobuf.Varian" +
      "tFileAttributes.KeyValue\032&\n\010KeyValue\022\013\n\003" +
      "key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\037\n\rVariantSampl" +
      "e\022\016\n\006sample\030\001 \002(\t\"\373\005\n\014VariantStats\022\030\n\020re" +
      "f_allele_count\030\001 \002(\005\022\030\n\020alt_allele_count" +
      "\030\002 \002(\005\022X\n\017genotypes_count\030\003 \003(\0132?.org.op" +
      "encb.biodata.formats.variant.protobuf.Va",
      "riantStats.Count\022\027\n\017ref_allele_freq\030\004 \002(" +
      "\005\022\027\n\017alt_allele_freq\030\005 \002(\005\022[\n\016genotypes_" +
      "freq\030\006 \003(\0132C.org.opencb.biodata.formats." +
      "variant.protobuf.VariantStats.Frequency\022" +
      "\027\n\017missing_alleles\030\007 \002(\005\022\031\n\021missing_geno" +
      "types\030\010 \002(\005\022\013\n\003maf\030\t \002(\002\022\013\n\003mgf\030\n \002(\002\022\026\n" +
      "\016passed_filters\030\013 \002(\005\022\017\n\007quality\030\014 \002(\002\022\023" +
      "\n\013num_samples\030\r \002(\005\022\031\n\021transitions_count" +
      "\030\016 \002(\005\022\033\n\023transversions_count\030\017 \002(\005\022\030\n\020m" +
      "endelian_errors\030\020 \001(\005\022\036\n\026cases_percent_d",
      "ominant\030\021 \001(\002\022!\n\031controls_percent_domina" +
      "nt\030\022 \001(\002\022\037\n\027cases_percent_recessive\030\023 \001(" +
      "\002\022\"\n\032controls_percent_recessive\030\024 \001(\002\022\026\n" +
      "\016hardy_weinberg\030\025 \001(\002\032#\n\005Count\022\013\n\003key\030\001 " +
      "\002(\t\022\r\n\005count\030\002 \002(\005\032+\n\tFrequency\022\013\n\003key\030\001" +
      " \002(\t\022\021\n\tfrequency\030\002 \002(\002B\025B\023VariantFields" +
      "Protos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_descriptor,
              new java.lang.String[] { "Attrs", },
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.class,
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.Builder.class);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_descriptor =
            internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_descriptor.getNestedTypes().get(0);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_opencb_biodata_formats_variant_protobuf_VariantFileAttributes_KeyValue_descriptor,
              new java.lang.String[] { "Key", "Value", },
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.class,
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantFileAttributes.KeyValue.Builder.class);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_opencb_biodata_formats_variant_protobuf_VariantSample_descriptor,
              new java.lang.String[] { "Sample", },
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample.class,
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantSample.Builder.class);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_descriptor,
              new java.lang.String[] { "RefAlleleCount", "AltAlleleCount", "GenotypesCount", "RefAlleleFreq", "AltAlleleFreq", "GenotypesFreq", "MissingAlleles", "MissingGenotypes", "Maf", "Mgf", "PassedFilters", "Quality", "NumSamples", "TransitionsCount", "TransversionsCount", "MendelianErrors", "CasesPercentDominant", "ControlsPercentDominant", "CasesPercentRecessive", "ControlsPercentRecessive", "HardyWeinberg", },
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.class,
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Builder.class);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_descriptor =
            internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_descriptor.getNestedTypes().get(0);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Count_descriptor,
              new java.lang.String[] { "Key", "Count", },
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.class,
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Count.Builder.class);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_descriptor =
            internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_descriptor.getNestedTypes().get(1);
          internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_opencb_biodata_formats_variant_protobuf_VariantStats_Frequency_descriptor,
              new java.lang.String[] { "Key", "Frequency", },
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.class,
                org.opencb.biodata.models.variant.protobuf.VariantFieldsProtos.VariantStats.Frequency.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
