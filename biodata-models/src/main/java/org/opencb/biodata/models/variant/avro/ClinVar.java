/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.opencb.biodata.models.variant.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ClinVar extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ClinVar\",\"namespace\":\"org.opencb.biodata.models.variant.avro\",\"fields\":[{\"name\":\"accession\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"clinicalSignificance\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"traits\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"geneNames\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"reviewStatus\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.lang.String accession;
   private java.lang.String clinicalSignificance;
   private java.util.List<java.lang.String> traits;
   private java.util.List<java.lang.String> geneNames;
   private java.lang.String reviewStatus;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public ClinVar() {}

  /**
   * All-args constructor.
   */
  public ClinVar(java.lang.String accession, java.lang.String clinicalSignificance, java.util.List<java.lang.String> traits, java.util.List<java.lang.String> geneNames, java.lang.String reviewStatus) {
    this.accession = accession;
    this.clinicalSignificance = clinicalSignificance;
    this.traits = traits;
    this.geneNames = geneNames;
    this.reviewStatus = reviewStatus;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return accession;
    case 1: return clinicalSignificance;
    case 2: return traits;
    case 3: return geneNames;
    case 4: return reviewStatus;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: accession = (java.lang.String)value$; break;
    case 1: clinicalSignificance = (java.lang.String)value$; break;
    case 2: traits = (java.util.List<java.lang.String>)value$; break;
    case 3: geneNames = (java.util.List<java.lang.String>)value$; break;
    case 4: reviewStatus = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'accession' field.
   */
  public java.lang.String getAccession() {
    return accession;
  }

  /**
   * Sets the value of the 'accession' field.
   * @param value the value to set.
   */
  public void setAccession(java.lang.String value) {
    this.accession = value;
  }

  /**
   * Gets the value of the 'clinicalSignificance' field.
   */
  public java.lang.String getClinicalSignificance() {
    return clinicalSignificance;
  }

  /**
   * Sets the value of the 'clinicalSignificance' field.
   * @param value the value to set.
   */
  public void setClinicalSignificance(java.lang.String value) {
    this.clinicalSignificance = value;
  }

  /**
   * Gets the value of the 'traits' field.
   */
  public java.util.List<java.lang.String> getTraits() {
    return traits;
  }

  /**
   * Sets the value of the 'traits' field.
   * @param value the value to set.
   */
  public void setTraits(java.util.List<java.lang.String> value) {
    this.traits = value;
  }

  /**
   * Gets the value of the 'geneNames' field.
   */
  public java.util.List<java.lang.String> getGeneNames() {
    return geneNames;
  }

  /**
   * Sets the value of the 'geneNames' field.
   * @param value the value to set.
   */
  public void setGeneNames(java.util.List<java.lang.String> value) {
    this.geneNames = value;
  }

  /**
   * Gets the value of the 'reviewStatus' field.
   */
  public java.lang.String getReviewStatus() {
    return reviewStatus;
  }

  /**
   * Sets the value of the 'reviewStatus' field.
   * @param value the value to set.
   */
  public void setReviewStatus(java.lang.String value) {
    this.reviewStatus = value;
  }

  /** Creates a new ClinVar RecordBuilder */
  public static org.opencb.biodata.models.variant.avro.ClinVar.Builder newBuilder() {
    return new org.opencb.biodata.models.variant.avro.ClinVar.Builder();
  }
  
  /** Creates a new ClinVar RecordBuilder by copying an existing Builder */
  public static org.opencb.biodata.models.variant.avro.ClinVar.Builder newBuilder(org.opencb.biodata.models.variant.avro.ClinVar.Builder other) {
    return new org.opencb.biodata.models.variant.avro.ClinVar.Builder(other);
  }
  
  /** Creates a new ClinVar RecordBuilder by copying an existing ClinVar instance */
  public static org.opencb.biodata.models.variant.avro.ClinVar.Builder newBuilder(org.opencb.biodata.models.variant.avro.ClinVar other) {
    return new org.opencb.biodata.models.variant.avro.ClinVar.Builder(other);
  }
  
  /**
   * RecordBuilder for ClinVar instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClinVar>
    implements org.apache.avro.data.RecordBuilder<ClinVar> {

    private java.lang.String accession;
    private java.lang.String clinicalSignificance;
    private java.util.List<java.lang.String> traits;
    private java.util.List<java.lang.String> geneNames;
    private java.lang.String reviewStatus;

    /** Creates a new Builder */
    private Builder() {
      super(org.opencb.biodata.models.variant.avro.ClinVar.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.opencb.biodata.models.variant.avro.ClinVar.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.accession)) {
        this.accession = data().deepCopy(fields()[0].schema(), other.accession);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.clinicalSignificance)) {
        this.clinicalSignificance = data().deepCopy(fields()[1].schema(), other.clinicalSignificance);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.traits)) {
        this.traits = data().deepCopy(fields()[2].schema(), other.traits);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.geneNames)) {
        this.geneNames = data().deepCopy(fields()[3].schema(), other.geneNames);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reviewStatus)) {
        this.reviewStatus = data().deepCopy(fields()[4].schema(), other.reviewStatus);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing ClinVar instance */
    private Builder(org.opencb.biodata.models.variant.avro.ClinVar other) {
            super(org.opencb.biodata.models.variant.avro.ClinVar.SCHEMA$);
      if (isValidValue(fields()[0], other.accession)) {
        this.accession = data().deepCopy(fields()[0].schema(), other.accession);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.clinicalSignificance)) {
        this.clinicalSignificance = data().deepCopy(fields()[1].schema(), other.clinicalSignificance);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.traits)) {
        this.traits = data().deepCopy(fields()[2].schema(), other.traits);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.geneNames)) {
        this.geneNames = data().deepCopy(fields()[3].schema(), other.geneNames);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reviewStatus)) {
        this.reviewStatus = data().deepCopy(fields()[4].schema(), other.reviewStatus);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'accession' field */
    public java.lang.String getAccession() {
      return accession;
    }
    
    /** Sets the value of the 'accession' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder setAccession(java.lang.String value) {
      validate(fields()[0], value);
      this.accession = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'accession' field has been set */
    public boolean hasAccession() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'accession' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder clearAccession() {
      accession = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'clinicalSignificance' field */
    public java.lang.String getClinicalSignificance() {
      return clinicalSignificance;
    }
    
    /** Sets the value of the 'clinicalSignificance' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder setClinicalSignificance(java.lang.String value) {
      validate(fields()[1], value);
      this.clinicalSignificance = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'clinicalSignificance' field has been set */
    public boolean hasClinicalSignificance() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'clinicalSignificance' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder clearClinicalSignificance() {
      clinicalSignificance = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'traits' field */
    public java.util.List<java.lang.String> getTraits() {
      return traits;
    }
    
    /** Sets the value of the 'traits' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder setTraits(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.traits = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'traits' field has been set */
    public boolean hasTraits() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'traits' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder clearTraits() {
      traits = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'geneNames' field */
    public java.util.List<java.lang.String> getGeneNames() {
      return geneNames;
    }
    
    /** Sets the value of the 'geneNames' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder setGeneNames(java.util.List<java.lang.String> value) {
      validate(fields()[3], value);
      this.geneNames = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'geneNames' field has been set */
    public boolean hasGeneNames() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'geneNames' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder clearGeneNames() {
      geneNames = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'reviewStatus' field */
    public java.lang.String getReviewStatus() {
      return reviewStatus;
    }
    
    /** Sets the value of the 'reviewStatus' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder setReviewStatus(java.lang.String value) {
      validate(fields()[4], value);
      this.reviewStatus = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'reviewStatus' field has been set */
    public boolean hasReviewStatus() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'reviewStatus' field */
    public org.opencb.biodata.models.variant.avro.ClinVar.Builder clearReviewStatus() {
      reviewStatus = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public ClinVar build() {
      try {
        ClinVar record = new ClinVar();
        record.accession = fieldSetFlags()[0] ? this.accession : (java.lang.String) defaultValue(fields()[0]);
        record.clinicalSignificance = fieldSetFlags()[1] ? this.clinicalSignificance : (java.lang.String) defaultValue(fields()[1]);
        record.traits = fieldSetFlags()[2] ? this.traits : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        record.geneNames = fieldSetFlags()[3] ? this.geneNames : (java.util.List<java.lang.String>) defaultValue(fields()[3]);
        record.reviewStatus = fieldSetFlags()[4] ? this.reviewStatus : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
