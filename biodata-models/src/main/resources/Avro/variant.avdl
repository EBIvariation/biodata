/**
 * Variant AVDL Model
 *  @author Kalyan;
 *  @author Pawan;
 */
 
 
@namespace("models.variant.avro")

protocol Variant {	

  enum VariantType {SNV, MNV, INDEL, SV, CNV}
  enum AllelesCode {ALLELES_OK, ALLELES_MISSING, MULTIPLE_ALTERNATES, HAPLOID}
  
  record VariantHardyWeinbergStats { 
	float chi2;
    float pValue;
    int n;
    int n_AA_11;
    int n_Aa_10;
    int n_aa_00;
    float e_AA_11;
    float e_Aa_10;
    float e_aa_00;
    float p;
    float q; 
	
	}
  	
	record VariantStats { 
	
	string refAllele;
    string altAllele;
    VariantType variantType;    
    int refAlleleCount;
    int altAlleleCount;    
    int missingAlleles;
    int missingGenotypes;    
    float refAlleleFreq;
    float altAlleleFreq;    
    float maf;
    float mgf;
    string mafAllele;
    string mgfGenotype;    
    boolean passedFilters;    
    int mendelianErrors;    
    float casesPercentDominant;
    float controlsPercentDominant;
    float casesPercentRecessive;
    float controlsPercentRecessive;    
    float quality;
    int numSamples;
    VariantHardyWeinbergStats hw; 		
	
	}
  
  record VariantSourceEntry { 
  
	string fileId; 
	string studyId; 	   
	array<string> secondaryAlternates =[];	
	string format; 		
	map<map<string>> samplesData;	
    map<VariantStats> cohortStats;
    string DEFAULT_COHORT = "all";  
    map<string> attributes;
	
	}
	
	record Genotype { 
	  string reference; 
	  string alternate; 	   
	  array<int> allelesIdx =[];
	  boolean phased; 		 
	}
	
	record Variant{
		int SV_THRESHOLD = 50;
		string chromosome;
		int start;
		int end;
		int length;
		string reference;
		string alternate;		
		map<VariantSourceEntry> sourceEntries;
		string annotation;
	}
	
}